import{_ as h,c as u,J as t,m as e,a as s,w as a,V as l,E as n,o as p}from"./chunks/framework.WH0rnJL5.js";const c="/assets/how-to-include-markdown-in-stats-for-github-screenshot-1.GkmsPrEe.png",g="/assets/how-to-include-markdown-in-stats-for-github-screenshot-2.1uyJ7Qcy.png",U=JSON.parse('{"title":"让 GitHub 仓库的代码占比统计中包含 Markdown 文件","description":"","frontmatter":{"tags":["网站/GitHub","开发/Git","命令行/git","个人知识管理/知识库","知识领域/文档工程"]},"headers":[],"relativePath":"笔记/🛠️ 开发/让 GitHub 仓库的代码占比统计中包含 Markdown 文件.md","filePath":"笔记/🛠️ 开发/让 GitHub 仓库的代码占比统计中包含 Markdown 文件.md"}'),_={name:"笔记/🛠️ 开发/让 GitHub 仓库的代码占比统计中包含 Markdown 文件.md"},b=e("h1",{id:"让-github-仓库的代码占比统计中包含-markdown-文件",tabindex:"-1"},[s("让 GitHub 仓库的代码占比统计中包含 Markdown 文件 "),e("a",{class:"header-anchor",href:"#让-github-仓库的代码占比统计中包含-markdown-文件","aria-label":'Permalink to "让 GitHub 仓库的代码占比统计中包含 Markdown 文件"'},"​")],-1),k=e("h2",{id:"背景",tabindex:"-1"},[s("背景 "),e("a",{class:"header-anchor",href:"#背景","aria-label":'Permalink to "背景"'},"​")],-1),f=e("p",null,[e("img",{src:c,alt:""})],-1),m=e("p",null,"可以观察到对于充斥着一定程度的 HTML 模板的仓库而言，即便实际仓库内包含的主要是 Markdown 文件，GitHub 也依然会把大量的 HTML 统计为占比最多的文件。",-1),v=e("p",null,"这是因为 GitHub",-1),C=e("p",null,"但殊不知，GitHub 其实是支持对 Markdown 文件类型进行统计计数的，只需要一点点额外的配置就能达到这样的效果：",-1),w=e("p",null,[e("img",{src:g,alt:""})],-1),y=e("h2",{id:"如何实现",tabindex:"-1"},[s("如何实现 "),e("a",{class:"header-anchor",href:"#如何实现","aria-label":'Permalink to "如何实现"'},"​")],-1),A=e("sup",{class:"footnote-ref"},[e("a",{href:"#fn1",id:"fnref1"},"[1]")],-1),F=e("code",null,".gitattributes",-1),G=l(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>.gitattributes</span></span></code></pre></div><p>的文件并且填充下面的内容</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>*.md linguist-vendored=false</span></span>
<span class="line"><span>*.md linguist-generated=false</span></span>
<span class="line"><span>*.md linguist-documentation=false</span></span>
<span class="line"><span>*.md linguist-detectable=true</span></span></code></pre></div><p>就能实现对仓库内所有 <code>.md</code> 为拓展名结尾（Markdown）文件的配置。</p><p>这些配置选项具有这样的含义：</p><ul><li><code>linguist-vendored=false</code> 表示匹配到的文件不是外部代码，如果配置为 <code>true</code>，则将会被在占比统计中排除</li><li><code>linguist-generated=false</code> 表示匹配到的文件不是生成的代码，如果配置为 <code>true</code>，则不仅会被在占比统计中排除，也会在 diff 中被排除</li><li><code>linguist-documentation=false</code> 表示匹配到的文件不是文档类型的文件，如果配置为 <code>true</code>，则将会被在占比统计中排除</li><li><code>linguist-detectable=true</code> 表示强制匹配到的文件纳入到占比统计中，即便文件是 <code>prose</code>（也就是 Linguist 认为的 Markdown 类型的文件）和 <code>data</code>（也就是 Linguist 认为的 SQL 这样的类型的文件）<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li></ul>`,6),P=e("code",null,".gitignore",-1),E=e("code",null,"glob",-1),M=l(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>docs/*.md linguist-vendored=false</span></span>
<span class="line"><span>docs/*.md linguist-generated=false</span></span>
<span class="line"><span>docs/*.md linguist-documentation=false</span></span>
<span class="line"><span>docs/*.md linguist-detectable=true</span></span></code></pre></div><p>接下来你可以通过</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> check-attr -a </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">文件路</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>这样的命令来测试文件所匹配得到的 attribute，就像这样：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">❯</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git check-attr -a README.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">README.md:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> linguist-vendored: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">README.md:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> linguist-generated: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">README.md:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> linguist-documentation: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">README.md:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> linguist-detectable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2>`,6),H=e("h2",{id:"延伸阅读",tabindex:"-1"},[s("延伸阅读 "),e("a",{class:"header-anchor",href:"#延伸阅读","aria-label":'Permalink to "延伸阅读"'},"​")],-1),N=e("code",null,".gitattributes",-1),D=e("h2",{id:"贡献者",tabindex:"-1"},[s("贡献者 "),e("a",{class:"header-anchor",href:"#贡献者","aria-label":'Permalink to "贡献者"'},"​")],-1),L=e("h2",{id:"文件历史",tabindex:"-1"},[s("文件历史 "),e("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1),T=e("hr",{class:"footnotes-sep"},null,-1),x={class:"footnotes"},B={class:"footnotes-list"},V={id:"fn1",class:"footnote-item"},S=e("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1),I={id:"fn2",class:"footnote-item"},R=e("a",{href:"#fnref2",class:"footnote-backref"},"↩︎",-1);function O($,z,J,Q,q,j){const o=n("NolebasePageProperties"),i=n("VPNolebaseInlineLinkPreview"),r=n("NolebaseGitContributors"),d=n("NolebaseGitChangelog");return p(),u("div",null,[b,t(o),k,e("p",null,[s("对于 Nólëbase 这样的使用 Git 作为版本管理和协作的知识库和其他众多的文档站点（比如 Kubernetes 文档站 "),t(i,{href:"https://github.com/kubernetes/website",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("kubernetes/website")]),_:1}),s("），默认配置的情况下，GitHub 可能会把仓库内的代码占比展示为下面这样：")]),f,m,v,C,w,e("p",null,[s("上图是 Nólëbase 的主要仓库 "),t(i,{href:"https://github.com/nolebase/nolebase",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("nolebase/nolebase")]),_:1}),s(" 的代码占比统计信息，可以看到在调整配置之后，Nólëbase 中的巨量 Markdown 文件就能被统计到占比中了。")]),y,e("p",null,[s("想要配置这样的功能其实很简单，在这一切背后，GitHub 使用了一个名为 "),t(i,{href:"https://github.com/github-linguist/linguist",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Linguist")]),_:1}),s(" 的组件来探测文件类型"),A,s("，这样的配置是通过在名为 "),t(i,{href:"https://git-scm.com/docs/gitattributes",target:"_blank",rel:"noreferrer"},{default:a(()=>[F]),_:1}),s(" 文件中实现的，你需要在根目录中创建一个名为")]),G,e("p",null,[s("详细的配置选项介绍可以在 "),t(i,{href:"https://github.com/github-linguist/linguist/blob/master/docs/overrides.md#summary",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Overrides - Linguist supports a number of different custom override strategies for language definitions and file paths. · github-linguist/linguist")]),_:1}),s(" 查阅到。")]),e("p",null,[s("当然你也可以使用和 "),t(i,{href:"https://git-scm.com/docs/gitignore",target:"_blank",rel:"noreferrer"},{default:a(()=>[P]),_:1}),s(" 一样的 "),t(i,{href:"https://en.wikipedia.org/wiki/Glob_(programming)",target:"_blank",rel:"noreferrer"},{default:a(()=>[E]),_:1}),s(" 语法来匹配目录：")]),M,e("ul",null,[e("li",null,[t(i,{href:"https://github.com/github-linguist/linguist/issues/3964",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Markdown language is not detected · Issue #3964 · github-linguist/linguist")]),_:1})]),e("li",null,[t(i,{href:"https://github.com/github-linguist/linguist/issues/5951",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Add markdown as language · Issue #5951 · github-linguist/linguist")]),_:1})]),e("li",null,[t(i,{href:"https://github.com/github-linguist/linguist/blob/master/docs/overrides.md",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Overrides - Linguist supports a number of different custom override strategies for language definitions and file paths. · github-linguist/linguist")]),_:1})])]),H,e("ul",null,[e("li",null,[t(i,{href:"https://joshuatz.com/posts/2019/how-to-get-github-to-recognize-a-pure-markdown-repo/",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("How to Get Github to Recognize a Pure Markdown Repo")]),_:1})]),e("li",null,[s("详细的 Linguist 配置选项："),t(i,{href:"https://github.com/github-linguist/linguist/blob/master/docs/overrides.md",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Overrides - Linguist supports a number of different custom override strategies for language definitions and file paths. · github-linguist/linguist")]),_:1})]),e("li",null,[s("关于什么是 "),N,s(" 文件："),t(i,{href:"https://git-scm.com/docs/gitattributes",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Git - gitattributes Documentation")]),_:1})])]),D,t(r),L,t(d),T,e("section",x,[e("ol",B,[e("li",V,[e("p",null,[s("在 GitHub 的讨论 "),t(i,{href:"https://github.com/orgs/community/discussions/30976",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Add markdown code portion counting")]),_:1}),s(" 中，作者 @airtower-luna 介绍了 GitHub 所使用的 Linguist 的文件类型探测模块的配置文档。 "),S])]),e("li",I,[e("p",null,[s("在 Linguist 的 "),t(i,{href:"https://github.com/github-linguist/linguist/issues/3964",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("Issue #3964")]),_:1}),s(" 的"),t(i,{href:"https://github.com/github-linguist/linguist/issues/3964#issuecomment-354648277",target:"_blank",rel:"noreferrer"},{default:a(()=>[s("评论")]),_:1}),s("中提到的：「data (e.g. SQL) or prose (e.g. Markdown)」 "),R])])])])])}const W=h(_,[["render",O]]);export{U as __pageData,W as default};
