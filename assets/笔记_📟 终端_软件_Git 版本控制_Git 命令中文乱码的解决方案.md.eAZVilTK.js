import{_ as h,c,J as a,m as e,w as i,a as t,V as d,E as o,o as p}from"./chunks/framework.WH0rnJL5.js";const L=JSON.parse('{"title":"Git 命令中文乱码的解决方案","description":"","frontmatter":{"tags":["开发/Git","命令行/git"]},"headers":[],"relativePath":"笔记/📟 终端/软件/Git 版本控制/Git 命令中文乱码的解决方案.md","filePath":"笔记/📟 终端/软件/Git 版本控制/Git 命令中文乱码的解决方案.md"}'),_={name:"笔记/📟 终端/软件/Git 版本控制/Git 命令中文乱码的解决方案.md"},g=e("h1",{id:"git-命令中文乱码的解决方案",tabindex:"-1"},[t("Git 命令中文乱码的解决方案 "),e("a",{class:"header-anchor",href:"#git-命令中文乱码的解决方案","aria-label":'Permalink to "Git 命令中文乱码的解决方案"'},"​")],-1),u=e("h3",{id:"文档兼容性",tabindex:"-1"},[t("文档兼容性 "),e("a",{class:"header-anchor",href:"#文档兼容性","aria-label":'Permalink to "文档兼容性"'},"​")],-1),k=e("thead",null,[e("tr",null,[e("th",null,"主体"),e("th",null,"版本号"),e("th",null,"文档地址（如果有）")])],-1),f=e("td",null,"git",-1),m=e("td",null,"git version 2.32.1 (Apple Git-133)",-1),b=d(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>在使用 <code>simple-git</code> npm 库调用 Git 命令的子命令 <code>git status</code> 或者是 <code>git diff-tree</code> 时候会出现中文文件名乱码的情况：</p><p>比如：</p><ol><li>获取包含中文文件名的提交记录哈希</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git log --online</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">9ae153c</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (HEAD -</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> main, origin/main, origin/HEAD</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) chore: 将所有内部链接转换为 Markdown 链接</span></span></code></pre></div><ol start="2"><li>使用查询到的 <code>9ae153c</code> 提交哈希进行 <code>diff-tree</code> 操作：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> git diff-tree --no-commit-id --name-only -r </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">ae153c</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">&quot;\\342\\232\\240\\357\\270\\217 \\347\\237\\245\\350\\257\\206\\345\\272\\223\\351\\241\\273\\347\\237\\245.md&quot;</span></span></code></pre></div><p>可以发现返回的数据中包含了 <code>\\342\\232\\240\\357\\270\\217 \\347\\237\\245\\350\\257\\206\\345\\272\\223\\351\\241\\273\\347\\237\\245.md</code> 这样的乱码字符串，或者我们说出现了 <code>\\xxx\\xxx\\xxx</code> 这样的乱码。</p><h2 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-label="Permalink to &quot;原因&quot;">​</a></h2><p>出现这个问题的原因是因为 Git 命令全局配置下有一个名为 <code>core.quotepath</code> 的选项默认值为 <code>true</code>，这将导致 Git 命令会将「不寻常」的字符通过包裹双引号和反斜杠进行转译<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。将 <code>core.quotepath</code> 选项配置为 <code>false</code> 之后其将不会对高于 <code>0x80</code>（大于 ASCII 码表最大值 <code>0x7E</code><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>）的字符进行转译，而是选择全部逐字输出。</p><h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">​</a></h2><p>在命令行程序中使用下面的命令进行配置：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> config --global core.quotepath </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2>`,14),C=e("h2",{id:"贡献者",tabindex:"-1"},[t("贡献者 "),e("a",{class:"header-anchor",href:"#贡献者","aria-label":'Permalink to "贡献者"'},"​")],-1),x=e("h2",{id:"文件历史",tabindex:"-1"},[t("文件历史 "),e("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1),y=e("hr",{class:"footnotes-sep"},null,-1),F={class:"footnotes"},v={class:"footnotes-list"},G={id:"fn1",class:"footnote-item"},A=e("code",null,"core.quotepath",-1),P=e("em",null,"ls-files",-1),q=e("em",null,"diff",-1),N=e("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1),E={id:"fn2",class:"footnote-item"},w=e("a",{href:"#fnref2",class:"footnote-backref"},"↩︎",-1);function B(I,S,V,D,T,$){const n=o("NolebasePageProperties"),s=o("VPNolebaseInlineLinkPreview"),l=o("NolebaseGitContributors"),r=o("NolebaseGitChangelog");return p(),c("div",null,[g,a(n),u,e("table",null,[k,e("tbody",null,[e("tr",null,[f,m,e("td",null,[a(s,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:i(()=>[t("Git (git-scm.com)")]),_:1})])])])]),b,e("ul",null,[e("li",null,[a(s,{href:"https://blog.zengrong.net/post/git-codec-issues/",target:"_blank",rel:"noreferrer"},{default:i(()=>[t("git乱码解决方案汇总 | ZRONG's BLOG")]),_:1})]),e("li",null,[a(s,{href:"https://blog.csdn.net/tyro_java/article/details/53439537",target:"_blank",rel:"noreferrer"},{default:i(()=>[t("在git中出现中文乱码的解决方案_Johnny丶me的博客-CSDN博客_git utf8")]),_:1})]),e("li",null,[a(s,{href:"https://www.cnblogs.com/EasonJim/p/8403587.html",target:"_blank",rel:"noreferrer"},{default:i(()=>[t("Linux下Git命令中文显示乱码的问题解决：274\\232\\350\\256\\256\\346\\200\\273\\347\\273\\223 - EasonJim - 博客园")]),_:1})])]),C,a(l),x,a(r),y,e("section",F,[e("ol",v,[e("li",G,[e("p",null,[A,t(". The commands that output paths (e.g. "),P,t(", "),q,t('), when not given the -z option, will quote "unusual" characters in the pathname by enclosing the pathname in a double-quote pair and with backslashes, the same way strings in the C source code are quoted. From '),a(s,{href:"https://linux.die.net/man/1/git-config",target:"_blank",rel:"noreferrer"},{default:i(()=>[t("git-config(1) - Linux man page")]),_:1}),t(),N])]),e("li",E,[e("p",null,[a(s,{href:"https://en.wikipedia.org/wiki/ASCII",target:"_blank",rel:"noreferrer"},{default:i(()=>[t("ASCII - Wikipedia")]),_:1}),t(),w])])])])])}const O=h(_,[["render",B]]);export{L as __pageData,O as default};
