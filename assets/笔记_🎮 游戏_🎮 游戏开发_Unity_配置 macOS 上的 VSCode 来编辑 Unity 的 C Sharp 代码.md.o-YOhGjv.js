import{_ as h,c as d,J as a,m as s,a as i,w as e,V as o,E as n,o as c}from"./chunks/framework.WH0rnJL5.js";const k="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-1.a73LbDlJ.png",u="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-2.VXN7u0pg.png",g="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-4.xcyxfjld.png",C="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-5.A9v3PWE0.png",_="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-6.mf2WJ4Bs.png",m="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-7.CfltY3vY.png",y="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-8.Amx8Mn-h.png",f="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-9.HFA1ELZ5.png",F="/assets/configuring-vscode-on-macos-to-edit-unitys-c-sharp-scripts-screenshot-10.uZjpib_5.png",j=JSON.parse('{"title":"配置 macOS 上的 VSCode 来编辑 Unity 的 C Sharp 代码","description":"","frontmatter":{"tags":["开发/CSharp","操作系统/macOS","软件/Visual-Studio-Code/vscode","软件/Visual-Studio-Code","开发/游戏/Unity"]},"headers":[],"relativePath":"笔记/🎮 游戏/🎮 游戏开发/Unity/配置 macOS 上的 VSCode 来编辑 Unity 的 C Sharp 代码.md","filePath":"笔记/🎮 游戏/🎮 游戏开发/Unity/配置 macOS 上的 VSCode 来编辑 Unity 的 C Sharp 代码.md"}'),b={name:"笔记/🎮 游戏/🎮 游戏开发/Unity/配置 macOS 上的 VSCode 来编辑 Unity 的 C Sharp 代码.md"},E=s("h1",{id:"配置-macos-上的-vscode-来编辑-unity-的-c-sharp-代码",tabindex:"-1"},[i("配置 macOS 上的 VSCode 来编辑 Unity 的 C Sharp 代码 "),s("a",{class:"header-anchor",href:"#配置-macos-上的-vscode-来编辑-unity-的-c-sharp-代码","aria-label":'Permalink to "配置 macOS 上的 VSCode 来编辑 Unity 的 C Sharp 代码"'},"​")],-1),A=s("h2",{id:"配置-vscode",tabindex:"-1"},[i("配置 VSCode "),s("a",{class:"header-anchor",href:"#配置-vscode","aria-label":'Permalink to "配置 VSCode"'},"​")],-1),v=s("h3",{id:"安装-unity-插件",tabindex:"-1"},[i("安装 Unity 插件 "),s("a",{class:"header-anchor",href:"#安装-unity-插件","aria-label":'Permalink to "安装 Unity 插件"'},"​")],-1),S=s("p",null,[s("img",{src:k,alt:""})],-1),T=o('<p><img src="'+u+'" alt=""></p><h2 id="配置-unity" tabindex="-1">配置 Unity <a class="header-anchor" href="#配置-unity" aria-label="Permalink to &quot;配置 Unity&quot;">​</a></h2><p>我们需要在 Unity 的 Package Manager 中确认 Visual Studio Editor 的 Unity 插件包是激活状态。</p><p>要在 macOS 上检查 Package Manager 的设定，需要前往左上角「Window」-「Package Manager」来打开 Package Manager：</p><p><img src="'+g+'" alt=""></p><p>在新打开的窗口中，在左上角的 Packages 下拉菜单中选择「Unity Registry」作为 Package 数据源；然后在右侧的输入框中输入查找 Visual Studio Editor</p><p><img src="'+C+'" alt=""></p><p>理论上应该是会出现一个显示有「Remove」按钮的插件。</p>',8),N=s("code",null,"2.0.20",-1),D=s("h2",{id:"故障排查",tabindex:"-1"},[i("故障排查 "),s("a",{class:"header-anchor",href:"#故障排查","aria-label":'Permalink to "故障排查"'},"​")],-1),P=s("h3",{id:"the-net-core-sdk-cannot-be-located-error-running-dotnet-info-error-command-failed-dotnet-info-bin-sh-dotnet-command-not-found",tabindex:"-1"},[s("code",null,"The .NET Core SDK cannot be located: Error running dotnet --info: Error: Command failed: dotnet --info /bin/sh: dotnet: command not found"),i(),s("a",{class:"header-anchor",href:"#the-net-core-sdk-cannot-be-located-error-running-dotnet-info-error-command-failed-dotnet-info-bin-sh-dotnet-command-not-found","aria-label":'Permalink to "`The .NET Core SDK cannot be located: Error running dotnet --info: Error: Command failed: dotnet --info /bin/sh: dotnet: command not found`"'},"​")],-1),V=o('<p><img src="'+_+'" alt=""></p><p>出现这样的报错的时候如果我们观察在 VSCode 中的 C# 的 Output（输出）的时候可以发现是因为通过 <code>/bin/sh</code> 运行 <code>dotnet</code> 的时候出现了问题：</p><p><img src="'+m+'" alt=""></p><p>然而如果我通过命令行直接尝试的时候发现是能调用到 <code>dotnet</code> 的，命令行也反馈说能找到 .NET 8</p><p><img src="'+y+'" alt=""></p><p>查了一番资料<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>之后发现是因为 .NET 的支持与兼容性在 .NET 8 的时候有问题导致的，需要降级到 .NET 7 才行。</p><h4 id="卸载原先的-net-8" tabindex="-1">卸载原先的 .NET 8 <a class="header-anchor" href="#卸载原先的-net-8" aria-label="Permalink to &quot;卸载原先的 .NET 8&quot;">​</a></h4>',7),U=o(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://github.com/dotnet/cli-lab/releases/download/1.6.0/dotnet-core-uninstall.tar.gz</span></span></code></pre></div><p>卸载之后解压缩然后执行即可：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./dotnet-core-uninstall.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> +x ./dotnet-core-uninstall</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./dotnet-core-uninstall</span></span></code></pre></div><p>如果是之前使用 <code>brew</code> 安装的 .NET SDK，也可以通过 <code>brew</code> 卸载试试看：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> uninstall dotnet</span></span></code></pre></div><h4 id="安装兼容的-net-7" tabindex="-1">安装兼容的 .NET 7 <a class="header-anchor" href="#安装兼容的-net-7" aria-label="Permalink to &quot;安装兼容的 .NET 7&quot;">​</a></h4><p>似乎 <code>brew</code> 上下载不到 .NET 7，可以通过官方的渠道下载安装：</p>`,7),w=o('<p>下载之后安装：</p><p><img src="'+f+`" alt=""></p><p>安装好之后需要配置一下 <code>PATH</code>，用自己喜欢的编辑器打开</p><ul><li>如果使用 bash：<code>~/.bashrc</code></li><li>如果使用 zsh 的话：<code>~/.zshrc</code></li><li>如果你不清楚这是什么：<code>~/.zshrc</code></li></ul><p>然后在末尾追加下面的几行环境变量的配置来让 <code>bash</code> 和 <code>zsh</code> 能找到 .NET SDK：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Dotnet official installation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:/usr/local/share/dotnet&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.dotnet/tools&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> DOTNET_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;/usr/local/share/dotnet&quot;</span></span></code></pre></div><p>然后更新一下自己的终端：</p><ul><li>可以通过重新打开终端或者 iTerm2 实现</li><li>可以通过 <code>source ~/.bashrc</code> 或者 <code>source ~/.zshrc</code> （取决于上一步的配置）来实现</li></ul><p>最后就可以看到这样的信息啦：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> $</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dotnet --info</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> SDK:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Version:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">   7.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.405</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Commit:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    b563db86f8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">运行时环境:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> OS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Name:     Mac OS X</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> OS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Version:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">14.2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> OS</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Platform: Darwin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> RID:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">         osx-arm64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> Base</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Path:   /usr/local/share/dotnet/sdk/7.0.405/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Host:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  Version:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">      7.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.15</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  Architecture:</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> arm64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  Commit:</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       8</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">f4568cdaa</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> SDKs installed:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  7.0.405</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [/usr/local/share/dotnet/sdk]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">.NET</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> runtimes installed:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  Microsoft.AspNetCore.App</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 7.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.15 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  Microsoft.NETCore.App</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 7.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]</span></span></code></pre></div><p>也可以用</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">dotnet</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --list-runtimes</span></span></code></pre></div><p>命令来查看一下多个 .NET SDK 的安装情况，确保能找到刚刚安装的 .NET 7：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dotnet --list-runtimes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Microsoft.AspNetCore.App</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 7.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.15 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">Microsoft.NETCore.App</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 7.0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">.15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]</span></span></code></pre></div><p>这个时候重启整个 VSCode，再次重新打开就能看到不会报错，也能正常显示相关的补全和提示了：</p><p><img src="`+F+'" alt=""></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2>',17),x=s("h2",{id:"贡献者",tabindex:"-1"},[i("贡献者 "),s("a",{class:"header-anchor",href:"#贡献者","aria-label":'Permalink to "贡献者"'},"​")],-1),O=s("h2",{id:"文件历史",tabindex:"-1"},[i("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1),M=s("hr",{class:"footnotes-sep"},null,-1),q={class:"footnotes"},I={class:"footnotes-list"},K={id:"fn1",class:"footnote-item"},B=s("a",{href:"#fnref1",class:"footnote-backref"},"↩︎",-1);function z(H,R,$,G,J,L){const l=n("NolebasePageProperties"),t=n("VPNolebaseInlineLinkPreview"),r=n("NolebaseGitContributors"),p=n("NolebaseGitChangelog");return c(),d("div",null,[E,a(l),A,v,s("p",null,[i("需要先安装 Unity 在 VSCode 的插件："),a(t,{href:"https://marketplace.visualstudio.com/items?itemName=visualstudiotoolsforunity.vstuc",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Unity - Visual Studio Marketplace")]),_:1})]),S,s("p",null,[i("然后额外确认一下 C# Dev Kit 插件也安装上了（应该是会自动提示询问是否要安装的），如果没有安装，可以在这里安装 "),a(t,{href:"https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("C# Dev Kit - Visual Studio Marketplace")]),_:1})]),T,s("p",null,[i("按照 VSCode 官方对 Unity 的文档 "),a(t,{href:"https://code.visualstudio.com/docs/other/unity",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Visual Studio Code and Unity")]),_:1}),i(" 所述，为了能使用 VSCode，我们还需要额外保证这个安装之后的 Visual Studio Editor Unity Package 的版本高于 "),N,i(" ，否则会出现兼容性问题。")]),D,P,s("p",null,[i("可能会在安装完 "),a(t,{href:"https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("C# Dev Kit")]),_:1}),i(" 的 VSCode 插件之后出现下图这样的报错：")]),V,s("p",null,[i("对于 macOS 和 Windows 设备，建议通过 Microsoft 官方的 "),a(t,{href:"https://learn.microsoft.com/en-us/dotnet/core/additional-tools/uninstall-tool?tabs=windows",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Uninstall Tool")]),_:1}),i(" 来在系统上自动发现和卸载 .NET 相关的依赖。")]),s("p",null,[i("相关的卸载工具可以在 "),a(t,{href:"https://github.com/dotnet/cli-lab/releases",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Releases · dotnet/cli-lab")]),_:1}),i(" 这个页面找到，找到希望下载的文件之后复制链接下载即可：")]),U,s("p",null,[i("对于 macOS Arm64（Apple Silicon M 系列芯片）可以在这里下载："),a(t,{href:"https://dotnet.microsoft.com/zh-cn/download/dotnet/thank-you/sdk-7.0.405-macos-arm64-installer",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("下载 .NET 7.0 SDK (v7.0.405) - macOS Arm64 Installer")]),_:1})]),w,s("ul",null,[s("li",null,[a(t,{href:"https://github.com/dotnet/sdk/issues/6631",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("can use dotnet in command but cannot be located in vscode on mac os · Issue #6631 · dotnet/sdk")]),_:1})]),s("li",null,[a(t,{href:"https://forum.unity.com/threads/visual-studio-code-not-working-with-unity.699716/",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Visual Studio Code not working with Unity? - Unity Forum")]),_:1})]),s("li",null,[a(t,{href:"https://code.visualstudio.com/docs/other/unity",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("Visual Studio Code and Unity")]),_:1})])]),x,a(r),O,a(p),M,s("section",q,[s("ol",I,[s("li",K,[s("p",null,[i("在 "),a(t,{href:"https://github.com/dotnet/vscode-dotnet-runtime/issues/1592",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("macOS: C# Dev Kit vs C#, doesn't use the correct dotnet · Issue #1592 · dotnet/vscode-dotnet-runtime")]),_:1}),i(" 这篇 Issue 中首次见到相关讨论，然后在 "),a(t,{href:"https://stackoverflow.com/questions/76706036/how-to-install-multiple-dotnet-versions-using-brew/76707203#76707203",target:"_blank",rel:"noreferrer"},{default:e(()=>[i("c# - How to install multiple dotnet versions using brew? - Stack Overflow")]),_:1}),i(" 这篇回答中找到了具体的解决方法。 "),B])])])])])}const X=h(b,[["render",z]]);export{j as __pageData,X as default};
