import{_ as k,c as o,J as a,m as i,a as s,w as d,V as e,E as t,o as r}from"./chunks/framework.WH0rnJL5.js";const P=JSON.parse('{"title":"Git 添加 PR 拉取和切换命令","description":"","frontmatter":{"tags":["开发/Git","命令行/git","网站/GitHub"]},"headers":[],"relativePath":"笔记/📟 终端/软件/Git 版本控制/Git 添加 PR 拉取和切换命令.md","filePath":"笔记/📟 终端/软件/Git 版本控制/Git 添加 PR 拉取和切换命令.md"}'),c={name:"笔记/📟 终端/软件/Git 版本控制/Git 添加 PR 拉取和切换命令.md"},g=i("h1",{id:"git-添加-pr-拉取和切换命令",tabindex:"-1"},[s("Git 添加 PR 拉取和切换命令 "),i("a",{class:"header-anchor",href:"#git-添加-pr-拉取和切换命令","aria-label":'Permalink to "Git 添加 PR 拉取和切换命令"'},"​")],-1),y=e(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>审核代码的时候可能 GitHub 的 PR 文件视图不太好阅读，上下文的代码查找也会需要大量的时间，拉取到本地阅读会方便不少。</p><p>如果直接通过 <code>git</code> 命令来执行 PR 的拉取的话又会太麻烦，可以通过 <code>git</code> 命令支持的 alias（别名）来定义一下拉取 PR 的命令集。</p><p>输入下面的指令来编辑 <code>git</code> 命令的别名：</p><p>命令说明：</p><ol><li><code>config</code> 表示我们需要变更 <code>git</code> 命令的配置</li><li><code>--global</code> 表示我们需要变更全局配置</li><li><code>-e</code> 表示使用配置的默认编辑器进行编辑</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> config --global -e</span></span></code></pre></div><p>打开后可能会看到类似的文件内容：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[user]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    signingkey</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    email</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> neko@ayaka.moe</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> Ayaka Neko</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[core]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    editor</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;"> code -w --reuse-window</span></span></code></pre></div><p>我们需要在文件末尾添加一个新的配置项 <code>[alias]</code> 来声明别名，如果你已经有 <code>[alias]</code> 配置项，可以只添加别名的内容：</p><p>别名配置语法（多个命令可以用 <code>&amp;&amp;</code> 符号连接起来）：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[alias]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">    &lt;别名&gt; = </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;&lt;执行的命令&gt;&quot;</span></span></code></pre></div><p>添加快速拉取 PR 的别名只需要复制粘贴下面的代码即可：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">[alias]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    pullpr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;!f(){\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        [ -z \\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">$1\\</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot; ] &amp;&amp; { echo 使用方法: git pullpr PULL_REQUEST_ID [REMOTE_NAME] [NEW_BRANCH_NAME]; exit 1; }; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        remote=\${2:-upstream}; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        branch=\${3:-pr-$1}; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        git fetch $remote \\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">pull/$1/head:$branch\\</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        }; f &quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    pr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;!f(){\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        branch=\${3:-pr-$1}; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        git pullpr \\&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#98C379;">$@\\</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        git switch $branch; \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">        }; f &quot;</span></span></code></pre></div><p>使用方法：</p><ol><li>拉取指定来源的 PR 到本地：</li></ol>`,16),_=e('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pullpr </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">PR 的 I</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">远程代码库，默认为 upstrea</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">m</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">新的分支名</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">称</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><ol start="2"><li>快速拉取 PR 到本地：</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pr </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">PR 的 I</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">D</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',4),C=i("h2",{id:"文件历史",tabindex:"-1"},[s("文件历史 "),i("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function F(u,B,A,b,m,E){const n=t("NolebasePageProperties"),l=t("VPNolebaseInlineLinkPreview"),p=t("NolebaseGitContributors"),h=t("NolebaseGitChangelog");return r(),o("div",null,[g,a(n),y,i("p",null,[s("对于远程代码库的设定可以参阅 "),a(l,{href:"./Git 命令速记.html"},{default:d(()=>[s("Git 命令速记")]),_:1}),s(" 中的「远程代码库」章节：")]),_,a(p),C,a(h)])}const D=k(c,[["render",F]]);export{P as __pageData,D as default};
