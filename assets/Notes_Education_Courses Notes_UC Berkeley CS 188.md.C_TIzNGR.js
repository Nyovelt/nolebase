import{_ as n,c as l,J as a,m as e,a as t,V as c,o as h,E as o}from"./chunks/framework.afRX3mrX.js";const k=JSON.parse('{"title":"Notes for UCB CS 188","description":"","frontmatter":{"tags":["UCB","ShanghaiTech","Education","Courses"]},"headers":[],"relativePath":"Notes/Education/Courses Notes/UC Berkeley CS 188.md","filePath":"Notes/Education/Courses Notes/UC Berkeley CS 188.md"}'),u={name:"Notes/Education/Courses Notes/UC Berkeley CS 188.md"},d=e("h1",{id:"notes-for-ucb-cs-188",tabindex:"-1"},[t("Notes for UCB CS 188 "),e("a",{class:"header-anchor",href:"#notes-for-ucb-cs-188","aria-label":'Permalink to "Notes for UCB CS 188"'},"​")],-1),m=c('<h2 id="_1-intro-to-ai" tabindex="-1">1. Intro to AI <a class="header-anchor" href="#_1-intro-to-ai" aria-label="Permalink to &quot;1. Intro to AI&quot;">​</a></h2><h3 id="ai-history" tabindex="-1">AI History <a class="header-anchor" href="#ai-history" aria-label="Permalink to &quot;AI History&quot;">​</a></h3><ul><li>1940-1950: Early days: neural and computer science meet</li><li>1950—70: Excitement! Logic-driven <ul><li>1965: Robinson&#39;s complete algorithm for <strong>logical reasoning</strong></li></ul></li><li>1970—90: Knowledge-based approaches</li><li>1990—: Statistical approaches <ul><li>Agents and learning systems</li><li>Resurgence of probability, focus on uncertainty</li></ul></li><li>2000—: Where are we now? <ul><li>Big data, big compute, neural networks</li></ul></li></ul><h3 id="agent" tabindex="-1">Agent <a class="header-anchor" href="#agent" aria-label="Permalink to &quot;Agent&quot;">​</a></h3><p>An agent is an entity that perceives and acts <img src="https://webresources.aaaab3n.moe/uPic/TsvOqF.png" alt=""></p><h3 id="course-topics" tabindex="-1">Course Topics <a class="header-anchor" href="#course-topics" aria-label="Permalink to &quot;Course Topics&quot;">​</a></h3><ul><li>Search &amp; Planning <ul><li>How can I find a sequence of best decisions for a particular situation?</li></ul></li><li>Reinforcement Learning <ul><li>How can I find rules (policy) to make best decisions for any situation?</li></ul></li><li>Probability &amp; Inference <ul><li>How can I make sense of uncertainty in the world?</li></ul></li><li>Supervised Learning <ul><li>How can I learn a model of the world from data?</li></ul></li></ul><h2 id="_2-uninformed-search" tabindex="-1">2. Uninformed Search <a class="header-anchor" href="#_2-uninformed-search" aria-label="Permalink to &quot;2. Uninformed Search&quot;">​</a></h2><h3 id="search-problems" tabindex="-1">Search Problems <a class="header-anchor" href="#search-problems" aria-label="Permalink to &quot;Search Problems&quot;">​</a></h3><p>A search problem consists of:</p><ul><li>A state space</li><li>A successor function (with actions, costs)</li><li>A start state and a goal test A solution is a sequence of actions (a plan) which transforms the start state to a goal state</li></ul><h2 id="contributor" tabindex="-1">Contributor <a class="header-anchor" href="#contributor" aria-label="Permalink to &quot;Contributor&quot;">​</a></h2>',12),b=e("h2",{id:"changelog",tabindex:"-1"},[t("Changelog "),e("a",{class:"header-anchor",href:"#changelog","aria-label":'Permalink to "Changelog"'},"​")],-1);function p(f,_,g,C,P,N){const i=o("NolebasePageProperties"),r=o("NolebaseGitContributors"),s=o("NolebaseGitChangelog");return h(),l("div",null,[d,a(i),m,a(r),b,a(s)])}const y=n(u,[["render",p]]);export{k as __pageData,y as default};
