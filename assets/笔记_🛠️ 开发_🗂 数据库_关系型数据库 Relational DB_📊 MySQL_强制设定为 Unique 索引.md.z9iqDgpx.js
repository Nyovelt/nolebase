import{_ as h,c as o,J as a,m as s,a as e,V as r,o as k,E as i}from"./chunks/framework.WH0rnJL5.js";const E=JSON.parse('{"title":"强制设定为 UNIQUE 索引","description":"","frontmatter":{"tags":["开发/数据/数据库","计算机/数据库/mysql","开发/语言/SQL","开发/代码/代码片段"]},"headers":[],"relativePath":"笔记/🛠️ 开发/🗂 数据库/关系型数据库 Relational DB/📊 MySQL/强制设定为 Unique 索引.md","filePath":"笔记/🛠️ 开发/🗂 数据库/关系型数据库 Relational DB/📊 MySQL/强制设定为 Unique 索引.md"}'),p={name:"笔记/🛠️ 开发/🗂 数据库/关系型数据库 Relational DB/📊 MySQL/强制设定为 Unique 索引.md"},d=s("h1",{id:"强制设定为-unique-索引",tabindex:"-1"},[e("强制设定为 UNIQUE 索引 "),s("a",{class:"header-anchor",href:"#强制设定为-unique-索引","aria-label":'Permalink to "强制设定为 UNIQUE 索引"'},"​")],-1),c=r('<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>强制设定 UNIQUE 索引，会删除重复字段，可在设置 UNIQUE 提示失败存在重复字段时使用。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> IGNORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> ADD</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> UNIQUE</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> uk_</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">_</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">字段名</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">字段名</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span></code></pre></div><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',4),_=s("h2",{id:"文件历史",tabindex:"-1"},[e("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function g(B,D,y,A,u,C){const t=i("NolebasePageProperties"),n=i("NolebaseGitContributors"),l=i("NolebaseGitChangelog");return k(),o("div",null,[d,a(t),c,a(n),_,a(l)])}const b=h(p,[["render",g]]);export{E as __pageData,b as default};
