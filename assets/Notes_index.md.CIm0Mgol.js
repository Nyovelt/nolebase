import{_ as p,c as d,J as s,m as l,a as e,w as t,V as r,E as i,o as _}from"./chunks/framework.WH0rnJL5.js";const ve=JSON.parse('{"title":"📒 笔记","description":"","frontmatter":{},"headers":[],"relativePath":"Notes/index.md","filePath":"Notes/index.md"}'),c={name:"Notes/index.md"},k=l("h1",{id:"📒-笔记",tabindex:"-1"},[e("📒 笔记 "),l("a",{class:"header-anchor",href:"#📒-笔记","aria-label":'Permalink to "📒 笔记"'},"​")],-1),b=l("h2",{id:"小音和猫猫的知识库",tabindex:"-1"},[e("小音和猫猫的知识库 "),l("a",{class:"header-anchor",href:"#小音和猫猫的知识库","aria-label":'Permalink to "小音和猫猫的知识库"'},"​")],-1),u=l("h2",{id:"想要自己部署和在本地启动强大的-nolebase-知识库-或者自己拥有一份",tabindex:"-1"},[e("想要自己部署和在本地启动强大的 Nólëbase 知识库，或者自己拥有一份？ "),l("a",{class:"header-anchor",href:"#想要自己部署和在本地启动强大的-nolebase-知识库-或者自己拥有一份","aria-label":'Permalink to "想要自己部署和在本地启动强大的 Nólëbase 知识库，或者自己拥有一份？"'},"​")],-1),g=l("h3",{id:"背景介绍",tabindex:"-1"},[e("背景介绍 "),l("a",{class:"header-anchor",href:"#背景介绍","aria-label":'Permalink to "背景介绍"'},"​")],-1),f=l("p",null,"在继续之前，也请容许我介绍一下对项目所使用的技术和架构。",-1),m={id:"等等-这和-obsidian-publish-有什么不同",tabindex:"-1"},v=l("a",{class:"header-anchor",href:"#等等-这和-obsidian-publish-有什么不同","aria-label":'Permalink to "等等，这和 [Obsidian Publish](https://obsidian.md/publish) 有什么不同"'},"​",-1),C={id:"为什么不用-obsidian-publish",tabindex:"-1"},y=l("a",{class:"header-anchor",href:"#为什么不用-obsidian-publish","aria-label":'Permalink to "为什么不用 [Obsidian Publish](https://obsidian.md/publish)"'},"​",-1),P={id:"在什么情况下你应该使用-obsidian-publish",tabindex:"-1"},T=l("a",{class:"header-anchor",href:"#在什么情况下你应该使用-obsidian-publish","aria-label":'Permalink to "在什么情况下你应该使用 [Obsidian Publish](https://obsidian.md/publish)"'},"​",-1),F={id:"所以-也有别人在这样使用-vitepress-作为可部署的知识库吗",tabindex:"-1"},A=l("a",{class:"header-anchor",href:"#所以-也有别人在这样使用-vitepress-作为可部署的知识库吗","aria-label":'Permalink to "所以，也有别人在这样使用 [VitePress](https://vitepress.dev) 作为可部署的知识库吗？"'},"​",-1),N=l("p",null,"哦，当然！",-1),w=l("h3",{id:"如何下载到本地",tabindex:"-1"},[e("如何下载到本地 "),l("a",{class:"header-anchor",href:"#如何下载到本地","aria-label":'Permalink to "如何下载到本地"'},"​")],-1),S=l("p",null,"废话不多说，我们开始下载的步骤吧。",-1),V=l("code",null,"nolebase",-1),x=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clone https://github.com/nolebase/nolebase</span></span></code></pre></div><h3 id="如何使用、运行或者部署" tabindex="-1">如何使用、运行或者部署 <a class="header-anchor" href="#如何使用、运行或者部署" aria-label="Permalink to &quot;如何使用、运行或者部署&quot;">​</a></h3><p>完成了下载了吗？很好，恭喜你已经完成了很艰难的一步！</p><p>正如先前介绍过</p>',4),E=l("h4",{id:"准备工作",tabindex:"-1"},[e("准备工作 "),l("a",{class:"header-anchor",href:"#准备工作","aria-label":'Permalink to "准备工作"'},"​")],-1),I=l("p",null,"所以你在继续下面的步骤之前，需要完成另外的两件事情：",-1),O=l("code",null,"node --version",-1),j=l("code",null,"npm --version",-1),B=l("code",null,"pnpm --version",-1),D=l("h5",{id:"使用的是-windows-吗",tabindex:"-1"},[e("使用的是 Windows 吗 "),l("a",{class:"header-anchor",href:"#使用的是-windows-吗","aria-label":'Permalink to "使用的是 Windows 吗"'},"​")],-1),R={class:"warning custom-block"},q=l("p",{class:"custom-block-title"},"注意",-1),H=l("code",null,"scoop",-1),G=r('<p>想要快速安装 Scoop，使用 <kbd data-windows-keyboard-key="windows">Win</kbd> + <kbd>Q</kbd> 打开搜索，键入「Powershell」之后点击搜索结果中的蓝色方块，然后输入下面的命令：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">Set-ExecutionPolicy</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">ExecutionPolicy RemoteSigned </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Scope CurrentUser</span></span></code></pre></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">Invoke-RestMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">Uri https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">get.scoop.sh </span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> Invoke-Expression</span></span></code></pre></div>',3),L=r('<p>使用 <kbd data-windows-keyboard-key="windows">Win</kbd> + <kbd>Q</kbd> 打开搜索，键入「Powershell」之后点击搜索结果中的蓝色方块，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span></code></pre></div>',2),W=l("code",null,"vxx.xx.xx",-1),M=l("code",null,"v21.1.0",-1),Q=l("code",null,"scoop",-1),$=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install nodejs</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>由于我们使用到了 <code>sharp</code> 这个依赖来生成图片，而 <code>sharp</code> 依赖需要使用到 Python，因此你也需要安装 Python。</p><p>如果采用了上面提到的 <code>scoop</code>，可以使用下面的命令来安装 Python：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">scoop</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install python</span></span></code></pre></div></div>',2),J=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> prepare pnpm@latest --activate</span></span></code></pre></div><p>首次安装完成之后需要运行一下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> setup</span></span></code></pre></div>',4),U=r('<p>差不多准备好啦，让我们前往 Nólëbase 知识库所在的目录吧，使用下面的命令来前往 Nólëbase 知识库所在的目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span></span></code></pre></div><p>先多输入一个空格，然后接下来打开文件管理器，把你解压缩完成的 Nólëbase 知识库文件夹拖拽到运行窗口中，最后按下 <kbd data-keyboard-key="enter">回车</kbd> 键，就可以告诉 Powershell 前往 Nólëbase 知识库所在的目录了。</p><h5 id="使用的是-macos-吗" tabindex="-1">使用的是 macOS 吗 <a class="header-anchor" href="#使用的是-macos-吗" aria-label="Permalink to &quot;使用的是 macOS 吗&quot;">​</a></h5>',4),z={class:"warning custom-block"},K=l("p",{class:"custom-block-title"},"注意",-1),X=l("code",null,"Homebrew",-1),Y=r('<p>想要快速安装 Homebrew，使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-keyboard-key="space">空格</kbd> 打开「终端」应用，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/bin/bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre></div>',2),Z=r('<p>使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd data-keyboard-key="space">空格</kbd> 打开「终端」应用，然后输入下面的命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --version</span></span></code></pre></div>',2),ee=l("code",null,"vxx.xx.xx",-1),se=l("code",null,"v21.1.0",-1),ae=l("code",null,"Homebrew",-1),te=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install node</span></span></code></pre></div>',1),le=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> enable</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> prepare pnpm@latest --activate</span></span></code></pre></div><p>首次安装完成之后需要运行一下</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> setup</span></span></code></pre></div>',4),re=r('<p>差不多准备好啦，让我们前往 Nólëbase 知识库所在的目录吧，使用下面的命令来前往 Nólëbase 知识库所在的目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span></span></code></pre></div><p>先多输入一个空格，然后接下来打开访达，把你解压缩完成的 Nólëbase 知识库文件夹拖拽到终端窗口中，最后按下 <kbd data-keyboard-key="return">return</kbd> 键，就可以告诉终端前往 Nólëbase 知识库所在的目录了。</p><h5 id="使用的是-linux-吗" tabindex="-1">使用的是 Linux 吗 <a class="header-anchor" href="#使用的是-linux-吗" aria-label="Permalink to &quot;使用的是 Linux 吗&quot;">​</a></h5><p>你既然已经在使用 Linux 了，应该知道怎么做了吧？</p><h4 id="安装依赖和运行开发服务器" tabindex="-1">安装依赖和运行开发服务器 <a class="header-anchor" href="#安装依赖和运行开发服务器" aria-label="Permalink to &quot;安装依赖和运行开发服务器&quot;">​</a></h4>',6),ie=l("code",null,"node_modules",-1),ne=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> install</span></span></code></pre></div>',1),oe=r(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:dev</span></span></code></pre></div><p>就像这样</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> pnpm docs:dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> v1.0.0-rc.20</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Local:   http://localhost:5173/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  Network: use --host to expose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  press h to show help</span></span></code></pre></div>`,3),he=r('<p>在这个本地运行的 Nólëbase 知识库前端服务器启动的情况下，你针对所有 Markdown 文件、样式文件、配置文件的变更，都会实时响应到网页中。</p><p>如果刷新不及时或者更新有异常，也可以试试看使用 <kbd data-macos-keyboard-key="command">command</kbd> + <kbd>R</kbd> （macOS 系统） <kbd>Ctrl</kbd> + <kbd>R</kbd> （Windows 和 Linux 系统）快捷键强制刷新。</p><h4 id="构建并渲染为可部署的静态页面" tabindex="-1">构建并渲染为可部署的静态页面 <a class="header-anchor" href="#构建并渲染为可部署的静态页面" aria-label="Permalink to &quot;构建并渲染为可部署的静态页面&quot;">​</a></h4>',3),pe=r('<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> docs:build</span></span></code></pre></div><p>构建完成后，渲染出来的 HTML 和各种资源将会被存储在 <code>.vitepress/dist</code> 目录下面，你可以通过上传 <code>.vitepress/dist</code> 目录来完成 Nólëbase 知识库的部署。</p><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',3),de=l("h2",{id:"文件历史",tabindex:"-1"},[e("文件历史 "),l("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function _e(ce,ke,be,ue,ge,fe){const n=i("NolebasePageProperties"),a=i("VPNolebaseInlineLinkPreview"),o=i("NolebaseGitContributors"),h=i("NolebaseGitChangelog");return _(),d("div",null,[k,s(n),b,l("p",null,[e("欢迎来到小音和猫猫的知识库 "),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e("，这里是 📒 笔记分区")]),u,l("p",null,[e("很高兴你对 "),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 感兴趣！")]),g,l("p",null,[e("首先 "),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 是完全可以在本地无网络环境的情况下使用的！你可以在跟随"),s(a,{href:"#如何下载到本地"},{default:t(()=>[e("如何下载到本地")]),_:1}),e("的指引下载或者克隆之后使用 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 和 "),s(a,{href:"https://logseq.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Logseq")]),_:1}),e(" 这样的知识库软件打开，也可以用 "),s(a,{href:"https://typora.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Typora")]),_:1}),e(" 这样的 Markdown 编辑器打开进行浏览和编辑，这意味着即便你不具备任何的编程技能，也可以使用或者借鉴我们的知识库分类和组织方法。")]),f,l("p",null,[e("和其他的由 "),s(a,{href:"https://hexo.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Hexo")]),_:1}),e(" 驱动和生成的博客和静态网站类似，"),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 其实使用了名为 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 的静态生成器来驱动和生成网站，像 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 这样的静态生成器支持在 Markdown 文件中使用 "),s(a,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vue")]),_:1}),e(" 组件来嵌入并增强文档的阅读和使用体验。而 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 和 "),s(a,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vue")]),_:1}),e(" 是 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e(" 生态的一部分，他们都属于「前端技术」的一部分。")]),l("p",null,[e("在运行和部署上，我们使用免费的 "),s(a,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Netlify")]),_:1}),e(" 来提供网站的托管，使用 "),s(a,{href:"https://github.com/features/actions",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("GitHub Actions")]),_:1}),e("（你可以理解一个将会在每次我们将笔记和知识库内容更新到 GitHub 仓库之后会自动触发的一个自动化工作）把我们的笔记和知识库内容自动构建和部署到 "),s(a,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Netlify")]),_:1}),e(" 上。")]),l("h3",m,[e("等等，这和 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 有什么不同 "),v]),l("p",null,[e("好问题，作为 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 的用户，你可能会知道他们开发团队提供了一套专门用于发布 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 中的笔记的服务「"),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e("」，如果你不知道也不要紧，可以把 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 理解为一个可以帮助你将 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 中的笔记发布到互联网上帮助你分享和提供搜索引擎优化（SEO）的服务。")]),l("h4",C,[e("为什么不用 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(),y]),l("ol",null,[l("li",null,[s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 需要付费才能使用，但是实际上对于静态网站而言，就像先前介绍的那样，我们可以白嫖一些像是 "),s(a,{href:"https://pages.github.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("GitHub Pages")]),_:1}),e("，"),s(a,{href:"https://www.netlify.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Netlify")]),_:1}),e("，"),s(a,{href:"https://vercel.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vercel")]),_:1}),e(" 和 "),s(a,{href:"https://pages.cloudflare.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Cloudflare Pages")]),_:1}),e(" 这样现成的基础设施帮忙托管；")]),l("li",null,[s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 部署后的静态页面是没有 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 自带的插件功能的支持的，这意味着很多作者（或者你）在本地撰写好的使用了插件支持的语法的文档在本地使用 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 渲染和预览的时候是能正常工作的，然而将会在 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 部署和托管后变得不可用。这是非常关键的一个问题，很多用户（包括我在内）都非常依赖于 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 的插件生态，这样的问题现在还没有足够好的解决方案，但我们创建了名为 "),s(a,{href:"https://github.com/nolebase/integrations",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase 集成")]),_:1}),e(" 这样的项目来尝试提供一些常见的和常用的 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 插件在 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 和 "),s(a,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vue")]),_:1}),e(" 的环境下的替代方案，这样的替代方案虽然不能完全替代 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 插件的功能，但是可以在一定程度上提供类似的功能，你也可以关注一下；")])]),l("h4",P,[e("在什么情况下你应该使用 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(),T]),l("p",null,[s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 也有它自己的优点：")]),l("ol",null,[l("li",null,[e("寻找适合 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 的 Markdown 插件是困难和复杂的，"),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 天然支持所有 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 原生支持的语法和插件，这意味着你不需要额外的调研和试错工作就可以将你在本地使用 "),s(a,{href:"https://obsidian.md",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian")]),_:1}),e(" 撰写的文档直接部署到互联网上；")]),l("li",null,[e("运行和部署像是 "),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 这样的静态网站对于不具备任何的代码和编程知识的作者难度大得多，但是 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 不需要任何的代码和编程知识，也无需关心任何的技术细节，和 Notion 的分享一样，你只需要点击几下就可以完成部署；")])]),l("p",null,[e("所以如果你没有掌握必备的编程技能，或者你不想花时间和精力去学习和掌握这些技能，那么 "),s(a,{href:"https://obsidian.md/publish",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Obsidian Publish")]),_:1}),e(" 可能是一个更好的选择。")]),l("h3",F,[e("所以，也有别人在这样使用 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 作为可部署的知识库吗？ "),A]),N,l("p",null,[e("这里有一些我们在 GitHub 上发现的使用 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 作为知识库的项目：")]),l("ul",null,[l("li",null,[s(a,{href:"https://github.com/Charles7c/charles7c.github.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Charles7c/charles7c.github.io：基于 VitePress 构建的个人知识库/博客。")]),_:1})]),l("li",null,[s(a,{href:"https://github.com/Lercel/Vision",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Lercel/Vision")]),_:1})]),l("li",null,[s(a,{href:"https://github.com/maomao1996/mm-notes",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("maomao1996/mm-notes: 茂茂物语: 各种笔记记录（想到啥写啥系列）")]),_:1})]),l("li",null,[s(a,{href:"https://github.com/ATQQ/sugar-blog",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("ATQQ/sugar-blog: ✍️📚我写博客的地方🤪🤪🤪记录随笔与学习笔记")]),_:1})]),l("li",null,[s(a,{href:"https://github.com/chodocs/chodocs",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("chodocs/chodocs: 一站式前端内容网站，包括学习路线、知识体系。")]),_:1})])]),w,S,l("p",null,[e("如果你没有熟练掌握诸如命令行和 "),s(a,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Git")]),_:1}),e(" 的使用，我们在这里建议你使用 "),s(a,{href:"https://github.com",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("GitHub")]),_:1}),e(" 本身提供的 "),s(a,{href:"https://docs.github.com/zh/repositories/working-with-files/using-files/downloading-source-code-archives",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("下载源代码存档")]),_:1}),e(" 功能直接从 "),s(a,{href:"https://github.com",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("GitHub")]),_:1}),e(" 站点上下载打包好的压缩文件包，然后到本地解压后查看和使用。")]),l("p",null,[e("如果你掌握了命令行和 "),s(a,{href:"https://git-scm.com/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Git")]),_:1}),e(" 的使用，可以通过下面的命令克隆项目仓库到名为 "),V,e(" 的目录中：")]),x,l("blockquote",null,[l("p",null,[s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 其实使用了名为 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 的静态生成器来驱动和生成网站。")]),l("p",null,[e("而 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 和 "),s(a,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vue")]),_:1}),e(" 是 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e(" 生态的一部分，他们都属于「前端技术」的一部分。")])]),l("p",null,[e("因此你需要先配置一下 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e(" 和添加和管理 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 和 "),s(a,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vue")]),_:1}),e(" 作为底层管理依赖的工具 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e(" 。")]),E,I,l("ol",null,[l("li",null,[e("安装和配置 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("，要校验 Node.js 是否安装成功，可以通过打开命令行窗口然后运行 "),O,e(" 和 "),j,e(" 来查看是否会报错；")]),l("li",null,[e("安装和配置 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e("，要校验 pnpm 是否安装成功，可以通过打开命令行窗口然后运行 "),B,e("。")])]),D,l("div",R,[q,l("p",null,[e("如果你使用的是 Windows，可以选择通过 "),s(a,{href:"https://scoop.sh/",target:"_blank",rel:"noreferrer"},{default:t(()=>[H]),_:1}),e("（一款在 Windows 上面向开发者可用的包管理器）来安装这些必要的工具，这样可以避免在 Windows 上面安装和配置这些工具的时候遇到的一些问题。")]),G]),L,l("p",null,[e("如果你看到了类似于 "),W,e(" 的版本号（比如 "),M,e("），那么恭喜你，你已经成功安装了 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("。")]),l("p",null,[e("如果没有看到，那么你需要先安装 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("。如果采用了上面提到的 "),Q,e("，可以使用下面的命令来安装 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("：")]),$,l("p",null,[e("接下来让我们来安装 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e("，使用下面的命令来安装 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e("：")]),J,l("p",null,[e("来配置 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e(" 所需要的目录，完成之后需要关掉当前的 Powershell 窗口，然后重新打开一个新的 Powershell 窗口。")]),U,l("div",z,[K,l("p",null,[e("如果你使用的是 macOS，可以选择通过 "),s(a,{href:"https://brew.sh/",target:"_blank",rel:"noreferrer"},{default:t(()=>[X]),_:1}),e("（一款在 macOS 上面向开发者可用的包管理器）来安装这些必要的工具，这样可以避免在 macOS 上面安装和配置这些工具的时候遇到的一些问题。")]),Y]),Z,l("p",null,[e("如果你看到了类似于 "),ee,e(" 的版本号（比如 "),se,e("），那么恭喜你，你已经成功安装了 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("。")]),l("p",null,[e("如果没有看到，那么你需要先安装 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("。如果采用了上面提到的 "),ae,e("，可以使用下面的命令来安装 "),s(a,{href:"https://nodejs.org/en",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Node.js")]),_:1}),e("：")]),te,l("p",null,[e("接下来让我们来安装 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e("，使用下面的命令来安装 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e("：")]),le,l("p",null,[e("来配置 "),s(a,{href:"https://pnpm.io/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("pnpm")]),_:1}),e(" 所需要的目录，完成之后需要关掉当前的终端窗口，然后重新打开一个新的终端窗口。")]),re,l("p",null,[e("在倒数第二步中，我们需要安装依赖，这样 "),s(a,{href:"https://vitepress.dev",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("VitePress")]),_:1}),e(" 和 "),s(a,{href:"https://vuejs.org/",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Vue")]),_:1}),e(" 就会被下载到本地的 "),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 目录/文件夹下的 "),ie,e(" 目录/文件夹下了：")]),ne,l("p",null,[e("接下来你可以直接运行下面的命令开启一个本地运行的 "),s(a,{href:"https://nolebase.ayaka.io",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("Nólëbase")]),_:1}),e(" 知识库前端服务器，通常而言我们称之为「开发服务器」，用这个服务器，可以通过浏览器在本地直接访问渲染完成的页面：")]),oe,l("p",null,[e("当你看到上面的字样的时候，就可以前往本地的 "),s(a,{href:"http://localhost:5173",target:"_blank",rel:"noreferrer"},{default:t(()=>[e("http://localhost:5173")]),_:1}),e(" 查看渲染完成的页面了：")]),he,l("p",null,[e("想要部署页面，首先先确保你已经执行过了"),s(a,{href:"#安装依赖和运行开发服务器"},{default:t(()=>[e("安装依赖和运行开发服务器")]),_:1}),e(" 的步骤，一般而言构建和渲染的时候可能遇到的问题都可以在运行开发服务器的时候发现，接下来你只需要一个简单的命令就能完成构建了：")]),pe,s(o),de,s(h)])}const Ce=p(c,[["render",_e]]);export{ve as __pageData,Ce as default};
