import{_ as r,c as d,J as a,m as s,w as t,a as i,V as h,E as l,o}from"./chunks/framework.WH0rnJL5.js";const g="/assets/image_20211013185835.h5XiEdFj.png",y="/assets/image_20211013185238.M1LwT_3R.png",B="/assets/image_20211013185153.AnBTqLYG.png",w=JSON.parse('{"title":"asciinema-player 插件开发记录","description":"","frontmatter":{"tags":["开发/前端","开发/语言/TypeScript","软件/Obsidian/插件","开发/Nodejs/Rollup"]},"headers":[],"relativePath":"笔记/🛠️ 开发/Obsidian 插件开发/asciinema-player 插件开发记录.md","filePath":"笔记/🛠️ 开发/Obsidian 插件开发/asciinema-player 插件开发记录.md"}'),c={name:"笔记/🛠️ 开发/Obsidian 插件开发/asciinema-player 插件开发记录.md"},E=s("h1",{id:"asciinema-player-插件开发记录",tabindex:"-1"},[s("code",null,"asciinema-player"),i(" 插件开发记录 "),s("a",{class:"header-anchor",href:"#asciinema-player-插件开发记录","aria-label":'Permalink to "`asciinema-player` 插件开发记录"'},"​")],-1),F=s("h2",{id:"说明",tabindex:"-1"},[i("说明 "),s("a",{class:"header-anchor",href:"#说明","aria-label":'Permalink to "说明"'},"​")],-1),C=s("h2",{id:"初始化",tabindex:"-1"},[i("初始化 "),s("a",{class:"header-anchor",href:"#初始化","aria-label":'Permalink to "初始化"'},"​")],-1),u=s("h3",{id:"创建仓库",tabindex:"-1"},[i("创建仓库 "),s("a",{class:"header-anchor",href:"#创建仓库","aria-label":'Permalink to "创建仓库"'},"​")],-1),A=s("strong",null,"Use this template",-1),D=h(`<h3 id="克隆仓库到本地" tabindex="-1">克隆仓库到本地 <a class="header-anchor" href="#克隆仓库到本地" aria-label="Permalink to &quot;克隆仓库到本地&quot;">​</a></h3><p>一般放置到插件的目录在 <code>&lt;知识库路径&gt;/.obsidian/plugins/&lt;插件名&gt;</code> ，如果你变更过 Obsidian 的配置文件路径，把 <code>.obsidian</code> 改成你想要的即可。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clone github.com/</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">用户</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">仓库</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">知识库路</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">径</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/.obsidian/plugins/</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">插件</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">名</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>以我的为例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clone nekomeowww.git:nekomeowww/obsidian-asciinema-player.git</span></span></code></pre></div><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> i</span></span></code></pre></div><h3 id="变更插件信息" tabindex="-1">变更插件信息 <a class="header-anchor" href="#变更插件信息" aria-label="Permalink to &quot;变更插件信息&quot;">​</a></h3><p>编辑 <code>manifest.json</code> 来调整插件的名称、作者、简介和版本等信息。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;obsidian-asciinema-player&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">插件</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> ID</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">，</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">不可以与社区已经存在的插件重复</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;asciinema Player&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">插件名称</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">插件版本号</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;minAppVersion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;0.9.12&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">要求的</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Obsidian</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> 最小版本号</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">简介</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Ayaka Neko&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">作者</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;authorUrl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;https://github.com/nekomeowww&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">作者地址</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;isDesktopOnly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">决定了使用的是</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Node</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> API</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">（</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">跨平台</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">） </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">还是</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> Electron</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> API</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">（</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">桌面端</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>编辑 <code>package.json</code> 文件来调整最终发布的 npm 包信息。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;obsidian-asciinema-player&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">npm</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> 包名称</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">版本号</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;description&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">简介</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;main.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">程序主要入点</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">，</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">不要改这里</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: { # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">脚本指令</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;rollup --config rollup.config.js -w&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">热加载插件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;rollup --config rollup.config.js --environment BUILD:production&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">构建发布版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;keywords&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [], # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">关键字</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;author&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Ayaka Neko&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">作者</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;license&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;MIT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  &quot;devDependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;@rollup/plugin-commonjs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^18.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;@rollup/plugin-node-resolve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^11.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;@rollup/plugin-typescript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^8.2.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;@types/node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^14.14.37&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;obsidian&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^0.12.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;rollup&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^2.32.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;tslib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^2.2.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;typescript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;^4.2.4&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="调整文件夹结构" tabindex="-1">调整文件夹结构 <a class="header-anchor" href="#调整文件夹结构" aria-label="Permalink to &quot;调整文件夹结构&quot;">​</a></h3><p>一般情况下源代码都会被放置在 <code>src</code> 目录中，我们可以创建一个 <code>src</code> 目录，把 <code>main.ts</code> 放进去。</p><p><img src="`+g+`" alt=""></p><p>然后去 <code>rollup.config.js</code> 文件中调整我们编译的程序入点路径：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  input</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&#39;src/main.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> # </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">把</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> input</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> 字段的值从</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ts</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> 改成</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h3 id="编译并开启热加载" tabindex="-1">编译并开启热加载 <a class="header-anchor" href="#编译并开启热加载" aria-label="Permalink to &quot;编译并开启热加载&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> dev</span></span></code></pre></div><p>现在对 <code>main.ts</code> 及其依赖的文件都会被自动编译到 <code>main.js</code> 文件中。</p><h3 id="在-obsidian-中激活我们的插件" tabindex="-1">在 Obsidian 中激活我们的插件 <a class="header-anchor" href="#在-obsidian-中激活我们的插件" aria-label="Permalink to &quot;在 Obsidian 中激活我们的插件&quot;">​</a></h3><ol><li>先重新加载 Obsidian</li></ol><p><img src="`+y+'" alt=""></p><ol start="2"><li>在插件列表中激活我们的插件</li></ol><p><img src="'+B+`" alt=""></p><h2 id="插件结构" tabindex="-1">插件结构 <a class="header-anchor" href="#插件结构" aria-label="Permalink to &quot;插件结构&quot;">​</a></h2><p>在案例插件的 <code>main.ts</code> 代码文件中可以看到：</p><div class="language-TypeScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">TypeScript</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Modal</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Notice</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">PluginSettingTab</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">Setting</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;obsidian&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * MyPlugin 拓展了 obsidian 的 Plugin（插件）实现</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * MyPlugin 同时是一个默认的导出对象，也就是说插件默认从这个位置挂载</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> MyPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 定义了设定的结构</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;">  settings</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> MyPluginSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // onload 是默认挂载插件时执行的事件函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> onload</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // TODO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // onunload 是插件卸载时执行的的事件函数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  onunload</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // TODO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * SampleSettingTab 拓展了 obsidian 的 PluginSettingTab（插件设定选项卡）实现</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> SampleSettingTab</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> PluginSettingTab</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,28),m=s("code",null,"export default class",-1),q=s("code",null,"Plugin",-1),b=h(`<h2 id="开始编写" tabindex="-1">开始编写 <a class="header-anchor" href="#开始编写" aria-label="Permalink to &quot;开始编写&quot;">​</a></h2><h3 id="i18n-支持" tabindex="-1">i18n 支持 <a class="header-anchor" href="#i18n-支持" aria-label="Permalink to &quot;i18n 支持&quot;">​</a></h3><p>在 <code>src</code> 下创建 <code>locales</code> 目录，以及 <code>locales</code> 目录下的 <code>lang</code> 文件夹和 <code>helpers.ts</code> 文件。</p><ol><li>在 <code>helpers.ts</code> 文件中，我们将会构建 i18n 的主要函数 <code>t</code></li><li>在 <code>lang</code> 文件夹中，将会保存我们需要的本地化文件</li></ol><p>在 <code>locales/lang</code> 目录下创建我们的默认语言 English（英文）的本地化文件 <code>en.ts</code>，以及简体中文的本地化文件 <code>zh-cn.ts</code>，这两个文件的结构都一致：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>在 <code>helpers.ts</code> 中写下下面的内容：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">moment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;obsidian&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> // 导入 moment</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 导入本地化文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> en</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;./lang/en&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> zhCN</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &#39;./lang/zh-cn&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 创建字典</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> localeMap</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> { [</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">k</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E5C07B;"> Partial</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> en</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">&gt; } </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    en</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    &quot;zh-cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">zhCN</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// obsidian 中的 moment.locale() 函数可以用于获取黑曜石的语言</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> locale</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> localeMap</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">moment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">locale</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">@params</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> {String} str - i18n 本地化键值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> 本地化字符串</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">str</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> keyof</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> en</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 如果 locale 不存在，则打印错误</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">locale</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;Error: Plugin obsidian-asciinema-player locale not found&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">moment</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">locale</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // 如果 locale 或是 locale[str] 未定义，自动回退到 en（英文）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">locale</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> locale</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> en</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>这样我们在任何一个地方导入 <code>helpers.ts</code> 就可以使用 i18n 了。</p><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>`,10),f=s("h2",{id:"文件历史",tabindex:"-1"},[i("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function _(v,P,x,T,N,S){const k=l("NolebasePageProperties"),n=l("VPNolebaseInlineLinkPreview"),p=l("NolebaseGitContributors"),e=l("NolebaseGitChangelog");return o(),d("div",null,[E,a(k),F,s("p",null,[a(n,{href:"https://unix.stackexchange.com/questions/512450/how-to-use-asciinema-offline",target:"_blank",rel:"noreferrer"},{default:t(()=>[i("如何离线使用 asciinema")]),_:1}),a(n,{href:"https://github.com/asciinema/asciinema-player/blob/develop/README.md#use-the-player-in-your-html-page",target:"_blank",rel:"noreferrer"},{default:t(()=>[i("asciinema-player 官方 API 指南 · asciinema/asciinema-player")]),_:1})]),C,u,s("p",null,[i("去 "),a(n,{href:"https://github.com/obsidianmd/obsidian-sample-plugin",target:"_blank",rel:"noreferrer"},{default:t(()=>[i("obsidian-sample-plugin")]),_:1}),i(" 获取样例插件，可以使用 GitHub 自带的 "),A,i("（使用这个模版）来快速创建副本到自己的 GitHub 账号")]),D,s("p",null,[i("在 Obsidian 的"),a(n,{href:"./Obsidian 官方文档参考.html"},{default:t(()=>[i("Obsidian 官方文档参考")]),_:1}),i("中可以得知：必须使用 "),m,i(" 导出一个扩展 "),q,i(" 的默认类，所以我们的插件要基于拓展的 Plugin 类完成。")]),b,a(p),f,a(e)])}const j=r(c,[["render",_]]);export{w as __pageData,j as default};
