import{_ as l,c as o,J as s,V as p,m as e,a as h,o as r,E as a}from"./chunks/framework.WH0rnJL5.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{"status":"尚未完成"},"headers":[],"relativePath":"笔记/📟 终端/软件/容器化/docker 容器化.md","filePath":"笔记/📟 终端/软件/容器化/docker 容器化.md"}'),k={name:"笔记/📟 终端/软件/容器化/docker 容器化.md"},c=p(`<h2 id="安装-docker" tabindex="-1">安装 Docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 Docker&quot;">​</a></h2><h3 id="centos" tabindex="-1">CentOS <a class="header-anchor" href="#centos" aria-label="Permalink to &quot;CentOS&quot;">​</a></h3><p>移除老版本的安装</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo yum remove docker </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-client </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-client-latest </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-common </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-latest </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-latest-logrotate </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-logrotate </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">                  docker-engine</span></span></code></pre></div><p>安装 <code>yum-utils</code> 包（提供 <code>yum-config-manager</code> 实用工具程序）并设置 Docker 的稳定发行版软件存储库</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo yum install -y yum-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> sudo yum-config-manager </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">    --add-repo</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">    https://download.docker.com/linux/centos/docker-ce.repo</span></span></code></pre></div><p>安装 Docker</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> yum install docker-ce docker-ce-cli containerd.io</span></span></code></pre></div><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>`,9),d=e("h2",{id:"文件历史",tabindex:"-1"},[h("文件历史 "),e("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function C(g,u,y,m,_,b){const i=a("NolebasePageProperties"),n=a("NolebaseGitContributors"),t=a("NolebaseGitChangelog");return r(),o("div",null,[s(i),c,s(n),d,s(t)])}const f=l(k,[["render",C]]);export{v as __pageData,f as default};
