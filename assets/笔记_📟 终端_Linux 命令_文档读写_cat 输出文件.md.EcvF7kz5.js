import{_ as h}from"./chunks/IMG_7413.8XW-EwwK.js";import{_ as p,c as o,J as a,m as s,a as t,V as r,o as k,E as i}from"./chunks/framework.WH0rnJL5.js";const v=JSON.parse('{"title":"cat 输出文件","description":"","frontmatter":{},"headers":[],"relativePath":"笔记/📟 终端/Linux 命令/文档读写/cat 输出文件.md","filePath":"笔记/📟 终端/Linux 命令/文档读写/cat 输出文件.md"}'),c={name:"笔记/📟 终端/Linux 命令/文档读写/cat 输出文件.md"},d=s("h1",{id:"cat-输出文件",tabindex:"-1"},[s("code",null,"cat"),t(" 输出文件 "),s("a",{class:"header-anchor",href:"#cat-输出文件","aria-label":'Permalink to "`cat` 输出文件"'},"​")],-1),g=r(`<h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p><strong>c</strong>onc<strong>a</strong>tena<strong>t</strong>e，连环的含义，使用这个命令可以把任何文件的内容以文本形式输出到命令行上。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><p><code>-AbeEnstTuv</code> 是所有参数，此处是可选的</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">cat</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [-AbeEnstTuv] [--help] [--version] 文件名</span></span></code></pre></div><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><ol><li>看文本文件 hello 文件里面写着：世界你好！</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cat hello</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">世界你好！</span></span></code></pre></div><ol start="2"><li>看二进制文件</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> which curl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">/usr/bin/curl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cat /usr/bin/curl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">ELF&gt;��@��@8</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">            @@@@h����D�D</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">H0H#0H#�79 �y�y#�y#@��� ���DDS�td��� P�td@%@%@%��Q�tdR�td0H0H#0H#�7�7/lib64/ld-linux-x86-64.so.2GNU�GNUGNU��w���e����8=R{#�x�A �</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{(�BE���</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">fUa8��qX</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">{�M���O�nH�hQ�* </span><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#�4&quot;A��3�c�uC�Dt:����\`��</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">                                                          t5����</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 以下省略</span></span></code></pre></div><p>可以看到它强行把这个文件读取了，这个里面还有很多文件头的信息，这些信息在上一个命令 <strong>file</strong> 中被它读取并且解析，作为文件的元数据展示给你</p><ol start="3"><li>看图片文件</li></ol><p><img src="`+h+`" alt="IMG_7413.jpg|100"> IMG_7413.jpg</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> cat IMG_7413.JPG</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">����JFIFHH��</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)�ExifMMJR(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">�iZ�HH�0221��0100��1��</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">((�HH�����      																														��</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">���&quot;���</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}!1AQa&quot;q2��#B��R��$3br�</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">%&amp;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz�������������������������������������������������������������������������</span></span></code></pre></div><p>可以看到这个地方它也会强行把这个文件读取，不会自动转换为 base64 编码，这个里面也有很多文件头信息，被 <strong>file</strong> 命令读取并且使用</p><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>`,16),F=s("h2",{id:"文件历史",tabindex:"-1"},[t("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function y(u,_,C,b,A,E){const n=i("NolebasePageProperties"),e=i("NolebaseGitContributors"),l=i("NolebaseGitChangelog");return k(),o("div",null,[d,a(n),g,a(e),F,a(l)])}const f=p(c,[["render",y]]);export{v as __pageData,f as default};
