import{_ as p,c as k,J as a,m as s,w as n,a as e,V as l,E as i,o as c}from"./chunks/framework.nXKfLBEV.js";const V=JSON.parse('{"title":"FCA-bug5 Journals","description":"","frontmatter":{"tags":["FCA","Papers"]},"headers":[],"relativePath":"Notes/Projects/FCA/FCA-bug5.md","filePath":"Notes/Projects/FCA/FCA-bug5.md"}'),d={name:"Notes/Projects/FCA/FCA-bug5.md"},u=s("h1",{id:"fca-bug5-journals",tabindex:"-1"},[e("FCA-bug5 Journals "),s("a",{class:"header-anchor",href:"#fca-bug5-journals","aria-label":'Permalink to "FCA-bug5 Journals"'},"​")],-1),g=s("h2",{id:"requirements",tabindex:"-1"},[e("Requirements "),s("a",{class:"header-anchor",href:"#requirements","aria-label":'Permalink to "Requirements"'},"​")],-1),b=s("li",null,"docker",-1),m=s("li",null,"minikube",-1),C=s("li",null,"kubectl",-1),_=s("li",null,"python3, python3-pip",-1),y=s("li",null,"tmux",-1),f=l(`<h2 id="start-minikube" tabindex="-1">Start Minikube <a class="header-anchor" href="#start-minikube" aria-label="Permalink to &quot;Start Minikube&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Need a lot cpus for the experiment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">minikube</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> start -p seattle --cpus $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">nproc</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">)</span></span></code></pre></div><h2 id="file-locations" tabindex="-1">File locations <a class="header-anchor" href="#file-locations" aria-label="Permalink to &quot;File locations&quot;">​</a></h2><ul><li><code>~/Downloads/DeathStarBench</code></li><li><code>~/main</code></li></ul><h2 id="run-experiment" tabindex="-1">Run Experiment <a class="header-anchor" href="#run-experiment" aria-label="Permalink to &quot;Run Experiment&quot;">​</a></h2><h3 id="create-prometheus" tabindex="-1">Create Prometheus <a class="header-anchor" href="#create-prometheus" aria-label="Permalink to &quot;Create Prometheus&quot;">​</a></h3>`,6),F={id:"use-kube-prometheus",tabindex:"-1"},A=s("a",{class:"header-anchor",href:"#use-kube-prometheus","aria-label":'Permalink to "use [kube-prometheus](https://github.com/prometheus-operator/kube-prometheus)"'},"​",-1),P=l(`<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> clone https://github.com/prometheus-operator/kube-prometheus.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kube-prometheus</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Create the namespace and CRDs, and then wait for them to be available before creating the remaining resources</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Note that due to some CRD size we are using kubectl server-side apply feature which is generally available since kubernetes 1.22.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># If you are using previous kubernetes versions this feature may not be available and you would need to use kubectl create instead.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apply --server-side -f manifests/setup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> wait </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">	--for</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> condition=Established </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">	--all</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> CustomResourceDefinition </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">	--namespace=monitoring</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> apply -f manifests/</span></span></code></pre></div><h4 id="forward-ports" tabindex="-1">Forward Ports <a class="header-anchor" href="#forward-ports" aria-label="Permalink to &quot;Forward Ports&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># After pods Running</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># Check by \`kubectl get pods -A\`</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> monitoring port-forward svc/prometheus-k8s </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">9090</span></span></code></pre></div><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>`,4),v=s("h2",{id:"文件历史",tabindex:"-1"},[e("文件历史 "),s("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function x(E,N,D,q,w,T){const h=i("NolebasePageProperties"),t=i("VPNolebaseInlineLinkPreview"),r=i("NolebaseGitContributors"),o=i("NolebaseGitChangelog");return c(),k("div",null,[u,a(h),g,s("ul",null,[b,m,C,_,y,s("li",null,[a(t,{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("helm")]),_:1})])]),f,s("h4",F,[e("use "),a(t,{href:"https://github.com/prometheus-operator/kube-prometheus",target:"_blank",rel:"noreferrer"},{default:n(()=>[e("kube-prometheus")]),_:1}),e(),A]),P,a(r),v,a(o)])}const R=p(d,[["render",x]]);export{V as __pageData,R as default};
