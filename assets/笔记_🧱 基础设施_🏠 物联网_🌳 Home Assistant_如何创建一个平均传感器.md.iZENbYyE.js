import{_ as i,c,J as s,m as e,a,V as _,o as p,E as t}from"./chunks/framework.WH0rnJL5.js";const l="/assets/how-to-create-average-sensor-screenshot-1.VookiiW6.png",m="/assets/how-to-create-average-sensor-screenshot-2.IxrR_0jK.png",h="/assets/how-to-create-average-sensor-screenshot-3.CytokFvq.png",d="/assets/how-to-create-average-sensor-screenshot-4.zz55qZYv.png",g="/assets/how-to-create-average-sensor-screenshot-6.hkYSdXOC.png",b="/assets/how-to-create-average-sensor-screenshot-5.KlA4KIZW.png",V=JSON.parse('{"title":"如何创建一个平均传感器","description":"","frontmatter":{"tags":["开源/软件/Home-Assistant","开源/软件/Home-Assistant/HASS","物联网/智能家居/Home-Assistant/HASS","物联网/智能家居/Home-Assistant"]},"headers":[],"relativePath":"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/如何创建一个平均传感器.md","filePath":"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/如何创建一个平均传感器.md"}'),A={name:"笔记/🧱 基础设施/🏠 物联网/🌳 Home Assistant/如何创建一个平均传感器.md"},f=e("h1",{id:"如何创建一个平均传感器",tabindex:"-1"},[a("如何创建一个平均传感器 "),e("a",{class:"header-anchor",href:"#如何创建一个平均传感器","aria-label":'Permalink to "如何创建一个平均传感器"'},"​")],-1),N=_('<p>很简单，跟随下面的步骤来一起创建一个「全屋平均湿度」吧！</p><p>点击右手边 Tab 栏的「配置」，然后点选「设备与服务」</p><p><img src="'+l+'" alt=""></p><p>然后在新的视图的顶端找到「辅助元素」的 Tab，点选来切换到辅助元素即可创建。</p><p><img src="'+m+'" alt=""></p><p>接下来点击右下角的「+ 创建辅助元素」，就可以进入到辅助元素的创建引导选单了，这个时候点击「结合多个传感器状态」：</p><p><img src="'+h+'" alt=""></p><p>然后</p><ol><li>在标题中输入你喜欢的名字，我不喜欢 Home Assistant 的拼音转写，所以我会把名称写成全英文的，然后再在创建之后修改实体的 friendly name（人类友好名称）作为实际展示的名称，这里为了方便大家理解，就先填写中文的占个坑</li><li>在下面的实体列表中搜索你希望添加进去的传感器实体</li><li>在「统计项」中选择「平均值」</li><li>精度可以自行设置，因为这里做的是湿度的平均值，所以精度一般不会太高，我选择精度为 1，也就是保留一位小数</li></ol><p><img src="'+d+'" alt=""></p><p>点击右下角的提交之后就可以在之前的辅助元素 Tab 下面的视图看到新创建的实体了，点击之后就可以看到统计出来的数值。</p><p>正如之前所说，我希望修改一下展示名称，方便大家直接阅读和查找，所以可以点击右上角的齿轮 ⚙️ 图标，然后进入编辑器：</p><p><img src="'+g+'" alt=""></p><p>在「名称」一栏输入你喜欢的名称，最后点击更新就大功告成了！</p><p><img src="'+b+'" alt=""></p><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>',16),v=e("h2",{id:"文件历史",tabindex:"-1"},[a("文件历史 "),e("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function P(H,S,T,u,C,k){const o=t("NolebasePageProperties"),r=t("NolebaseGitContributors"),n=t("NolebaseGitChangelog");return p(),c("div",null,[f,s(o),N,s(r),v,s(n)])}const w=i(A,[["render",P]]);export{V as __pageData,w as default};
