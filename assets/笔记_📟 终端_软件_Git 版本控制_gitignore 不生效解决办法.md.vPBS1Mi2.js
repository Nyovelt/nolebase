import{_ as r,c as l,J as t,m as e,a as i,V as p,o as c,E as a}from"./chunks/framework.WH0rnJL5.js";const f=JSON.parse('{"title":".gitignore 不生效解决办法","description":"","frontmatter":{"tags":["命令行/git","开发/Git"]},"headers":[],"relativePath":"笔记/📟 终端/软件/Git 版本控制/gitignore 不生效解决办法.md","filePath":"笔记/📟 终端/软件/Git 版本控制/gitignore 不生效解决办法.md"}'),h={name:"笔记/📟 终端/软件/Git 版本控制/gitignore 不生效解决办法.md"},g=e("h1",{id:"gitignore-不生效解决办法",tabindex:"-1"},[i(".gitignore 不生效解决办法 "),e("a",{class:"header-anchor",href:"#gitignore-不生效解决办法","aria-label":'Permalink to ".gitignore 不生效解决办法"'},"​")],-1),d=p(`<p>当我们将 .gitignore 文件配置好后，却往往不能生效。这是因为 .gittignore 只能忽略那些没有被追踪（<code>track</code>）的文件，因为 git 存在本地缓存，如果文件已经纳入了版本管理，那么修改 .gittignore 是不能生效的。</p><p>那么解决办法就是将 git 的本地缓存删除</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> rm -r --cached .</span></span></code></pre></div><p>然后在提交就可以了</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> commit -m &quot;update .gitignore&quot;</span></span></code></pre></div><h2 id="贡献者" tabindex="-1">贡献者 <a class="header-anchor" href="#贡献者" aria-label="Permalink to &quot;贡献者&quot;">​</a></h2>`,6),_=e("h2",{id:"文件历史",tabindex:"-1"},[i("文件历史 "),e("a",{class:"header-anchor",href:"#文件历史","aria-label":'Permalink to "文件历史"'},"​")],-1);function k(m,b,u,C,v,F){const s=a("NolebasePageProperties"),o=a("NolebaseGitContributors"),n=a("NolebaseGitChangelog");return c(),l("div",null,[g,t(s),d,t(o),_,t(n)])}const P=r(h,[["render",k]]);export{f as __pageData,P as default};
